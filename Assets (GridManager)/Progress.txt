Project

https://en.wikipedia.org/wiki/A*_search_algorithm
https://www.youtube.com/watch?v=4zO5ab05fVM&list=PL1bPKmY0c-wmfc6k6V7M_K7RRQftSXTaU&ab_channel=SharpAccent


- FloorPrefab: Create Empty object with Quad as child
	- Attach NodeReference to quad inside object
		- Need walkable materials (2 minimum)
	- This object will be each node created by GridBase
	- If Quad, make sure it's rotated 90 deg along the ground
		- Raycast from overhead camera is calculated
- Drop the FloorObject inside GridBase "Grid Floor Prefab"


Classes derived from MonoBehaviour:
- GridBase (Grid Object)
	- This Creates all the nodes for units to traverse and player can select
	- Level Objects are created as unwalkable
	- 
- HandleAnimations,IKHandler (Player Prefab)
	- Updates speed, rotations, etc. of unit animations
	- IKHandler is for the unit's hand to hold a weapon
	
- LevelInitializer (GridGenerator)
	- Self-explanitory, creates Coroutines
	- Requires FloorPrefab
	
- LevelManager (GridGenerator)
	- Stores info for Level Objects
	- Accessed by Level Initializer
	
- LevelObject (For walls, floors) (LevelModel)
	- Helps LevelManager decide what should be navigated
	
- NodeReferences (FloorPrefab Child Quad)
	- Simply holds/applies materials
		- Should have minimum 2 materials
		- Walkable, not walkable (in that order)
	- Should be attached to the FloorPrefab
		- Not the level prefab
		
- PathfindMaster (Grid Object)
	- Creates threads for Pathfinder to find a path
	
- PlayerInteractions (GridGenerator)
	- Obviously handles the player's inputs
	
- UnitController (PlayerPrefab)
	- Needs UnitStates atatched to same object
	- This class handles the unit movement
		- Also updates Animator variables
		
- UnitStates (PlayerPrefab)
	- Simply holds variables
	- Can be changed in inspector